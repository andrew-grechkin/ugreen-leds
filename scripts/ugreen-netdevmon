#!/usr/bin/env bash

set -Eeuo pipefail

# shellcheck disable=SC1091

app="$(basename "$0")"
lock_app="/var/run/$app.lock"

if [[ -f "$lock_app" ]]; then
	echo "$app is already running, exiting"
	exit 1
fi

exit-app() {
	set +e
	rm -fv -- "$lock_app"
}

trap 'exit 143' TERM # systemd might send SIGTERM twice if it's not caught explicitly
trap 'exit-app' EXIT

touch "$lock_app"

# use variables from config file (unRAID specific)
if [[ -r /boot/config/plugins/ugreenleds-driver/settings.cfg ]]; then
	source "/boot/config/plugins/ugreenleds-driver/settings.cfg"
fi

# load environment variables
if [[ -r /etc/ugreen-leds.conf ]]; then
	source "/etc/ugreen-leds.conf"
fi

# => defaults ----------------------------------------------------------------------------------------------------- {{{1

COLOR_NETDEV_NORMAL="${COLOR_NETDEV_NORMAL:-"255 255 255"}"
COLOR_NETDEV_GATEWAY_UNREACHABLE="${COLOR_NETDEV_GATEWAY_UNREACHABLE:-"255 85 0"}"

BRIGHTNESS_NETDEV_LED="${BRIGHTNESS_NETDEV_LED:-"128"}"

CHECK_NETDEV_INTERVAL="${CHECK_NETDEV_INTERVAL:-60}"
CHECK_GATEWAY_CONNECTIVITY="${CHECK_GATEWAY_CONNECTIVITY:-false}"
CHECK_LINK_SPEED="${CHECK_LINK_SPEED:-true}"

# => initialize LED ----------------------------------------------------------------------------------------------- {{{1

{ lsmod | grep ledtrig_netdev >/dev/null; } || { modprobe -v ledtrig_netdev && sleep 2; }

led="netdev"
if netdev_name="${1:-$(ip -j a | jq -r '.[] | select(.operstate == "UP") | .ifname')}"; then
	echo "Activity $netdev_name -> $led" >&2
	echo netdev                          >"/sys/class/leds/$led/trigger"
	echo "$netdev_name"                  >"/sys/class/leds/$led/device_name"
	echo 0                               >"/sys/class/leds/$led/link"
	echo "${NETDEV_BLINK_TX:=1}"         >"/sys/class/leds/$led/tx"
	echo "${NETDEV_BLINK_RX:=1}"         >"/sys/class/leds/$led/rx"
	echo "${NETDEV_BLINK_INTERVAL:=50}"  >"/sys/class/leds/$led/interval"
	echo "$COLOR_NETDEV_NORMAL"          >"/sys/class/leds/$led/color"
	echo "$BRIGHTNESS_NETDEV_LED"        >"/sys/class/leds/$led/brightness"
fi

function set_netdev_normal_color() {
	color="$COLOR_NETDEV_NORMAL"

	if [[ "$CHECK_LINK_SPEED" == "true" ]]; then
		case $(cat "/sys/class/net/$netdev_name/speed") in
			100)   color="${COLOR_NETDEV_LINK_100:=$COLOR_NETDEV_NORMAL}" ;;
			1000)  color="${COLOR_NETDEV_LINK_1000:=$COLOR_NETDEV_NORMAL}" ;;
			2500)  color="${COLOR_NETDEV_LINK_2500:=$COLOR_NETDEV_NORMAL}" ;;
			10000) color="${COLOR_NETDEV_LINK_10000:=$COLOR_NETDEV_NORMAL}" ;;
		esac
	fi

	echo "$color" > "/sys/class/leds/$led/color"
}

# => monitor gateway connectivity --------------------------------------------------------------------------------- {{{1

if [[ "$CHECK_GATEWAY_CONNECTIVITY" == "false" && "$CHECK_LINK_SPEED" == "false" ]]; then
	exit 0
fi

while ((1)); do
	if [[ "$CHECK_GATEWAY_CONNECTIVITY" == "true" ]]; then
		if gw=$(getent hosts _gateway | awk '{print $1; exit}'); then
			if ping -q -c 1 -W 1 "$gw" >/dev/null; then
				set_netdev_normal_color
			else
				echo "$COLOR_NETDEV_GATEWAY_UNREACHABLE" > "/sys/class/leds/$led/color"
			fi
		fi
	fi

	sleep "${CHECK_NETDEV_INTERVAL}s"
done
